# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import validator_pb2 as validator__pb2


class ValidatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Validate = channel.stream_unary(
        '/Validator/Validate',
        request_serializer=validator__pb2.String.SerializeToString,
        response_deserializer=validator__pb2.Empty.FromString,
        )
    self.Get_result = channel.unary_stream(
        '/Validator/Get_result',
        request_serializer=validator__pb2.Empty.SerializeToString,
        response_deserializer=validator__pb2.String.FromString,
        )


class ValidatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Validate(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ValidatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Validate': grpc.stream_unary_rpc_method_handler(
          servicer.Validate,
          request_deserializer=validator__pb2.String.FromString,
          response_serializer=validator__pb2.Empty.SerializeToString,
      ),
      'Get_result': grpc.unary_stream_rpc_method_handler(
          servicer.Get_result,
          request_deserializer=validator__pb2.Empty.FromString,
          response_serializer=validator__pb2.String.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Validator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
